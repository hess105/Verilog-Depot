`default_nettype none
// Empty top module

module top (
  // I/O ports
  input  logic hz100, reset,
  input  logic [20:0] pb,
  output logic [7:0] left, right,
         ss7, ss6, ss5, ss4, ss3, ss2, ss1, ss0,
  output logic red, green, blue,

  // UART ports
  output logic [7:0] txdata,
  input  logic [7:0] rxdata,
  output logic txclk, rxclk,
  input  logic txready, rxready
);

  // Your code goes here...
  
  prienc16to4 u1(.in(pb[15:0]), .out(right[3:0]), .strobe(green));

  
endmodule

module prienc16to4 (

  input logic [15:0] in,
  output logic [3:0] out,
  output logic strobe

);

  // Needed to change from 4 bits to 5 bits due to error within
  // the input and output size. Adding them to this system seemed easier
  // 
  
  // Assigns strobe to turn on when any input is detected
  assign strobe = |in;
  
  
  assign out = (in[15] == 1) ? 4'b1111 : 
   (in[14] == 1) ? 4'b1110 : 
   (in[13] == 1) ? 4'b1101 : 
   (in[12] == 1) ? 4'b1100 : 
   (in[11] == 1) ? 4'b1011 : 
   (in[10] == 1) ? 4'b1010 : 
   (in[9] == 1) ? 4'b1001 : 
   (in[8] == 1) ? 4'b1000 : 
   (in[7] == 1) ? 4'b0111 : 
   (in[6] == 1) ? 4'b0110 : 
   (in[5] == 1) ? 4'b0101 : 
   (in[4] == 1) ? 4'b0100 : 
   (in[3] == 1) ? 4'b0011 :
   (in[2] == 1) ? 4'b0010 : 
   (in[1] == 1) ? 4'b0001 : 
   (in[0] == 1) ? 4'b0000 : 4'b0000;
  
endmodule
